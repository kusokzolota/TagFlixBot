import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from flask import Flask, request
from threading import Thread

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –æ—Ç BotFather
API_TOKEN = "7346569102:AAEh4S1kwJOVn6HAN25XuSlIWYz9YxlPUUk"
CHANNEL_USERNAME = "kussokofficial"  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ (–±–µ–∑ https://t.me/)
FILM_LINK = "https://t.me/+RTSVbES7UdQ5NzBi"  # –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ª

bot = telebot.TeleBot(API_TOKEN)
app = Flask(__name__)

@app.route('/')
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

def run():
    app.run(host='0.0.0.0', port=8080)

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start_message(message):
    user_id = message.from_user.id
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        status = bot.get_chat_member(chat_id=f"@{CHANNEL_USERNAME}", user_id=user_id).status
        
        if status in ['member', 'administrator', 'creator']:
            # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ —Ñ–∏–ª—å–º—É
            bot.send_message(
                message.chat.id,
                f"*–í–∞—à —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ª —É–∂–µ –í–∞—Å –∂–¥—ë—Çü§ó*\n\n[–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª—å–º—É –∏–ª–∏ —Å–µ—Ä–∏–∞–ª—É]({FILM_LINK})",
                parse_mode="Markdown"
            )
        else:
            # –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
            markup = InlineKeyboardMarkup()
            check_button = InlineKeyboardButton(
                text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
                callback_data="check_subscription"
            )
            markup.add(check_button)

            bot.send_message(
                message.chat.id,
                f"*–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ —Å–ø–æ–Ω—Å–æ—Ä–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ªüòâ*\n\n[–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª](https://t.me/{CHANNEL_USERNAME})",
                parse_mode="Markdown",
                reply_markup=markup
            )
    except Exception as e:
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞
        bot.send_message(
            message.chat.id,
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        print(f"–û—à–∏–±–∫–∞: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"
@bot.callback_query_handler(func=lambda call: call.data == "check_subscription")
def check_subscription(call):
    user_id = call.from_user.id
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
        status = bot.get_chat_member(chat_id=f"@{CHANNEL_USERNAME}", user_id=user_id).status
        
        if status in ['member', 'administrator', 'creator']:
            # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–¥–∞–ª—è—è –∫–Ω–æ–ø–∫—É
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
            bot.send_message(
                call.message.chat.id,
                f"*–í–∞—à —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ª —É–∂–µ –í–∞—Å –∂–¥—ë—Çü§ó*\n\n[–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–ª—å–º—É –∏–ª–∏ —Å–µ—Ä–∏–∞–ª—É]({FILM_LINK})",
                parse_mode="Markdown"
            )
        else:
            # –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            bot.answer_callback_query(
                call.id,
                text="–í—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å!",
                show_alert=True
            )
    except Exception as e:
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        bot.answer_callback_query(
            call.id,
            text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            show_alert=True
        )
        print(f"–û—à–∏–±–∫–∞: {e}")

# –£–¥–∞–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π Webhook –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º polling
bot.remove_webhook()

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask-—Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    Thread(target=run).start()
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()
